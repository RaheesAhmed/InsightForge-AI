generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id            String    @id @default(cuid())
  email         String    @unique
  hashedPassword String?
  name          String?
  username      String?   @unique
  role          Role      @default(USER)
  subscription  Subscription?
  documents     Document[]
  questions     Question[]
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt

  @@index([email])
}

model Subscription {
  id            String    @id @default(cuid())
  userId        String    @unique
  user          User      @relation(fields: [userId], references: [id])
  plan          Plan      @default(FREE)
  status        Status    @default(ACTIVE)
  documentsLimit Int
  questionsLimit Int
  questionsUsed  Int      @default(0)
  documentsUsed  Int      @default(0)
  validUntil    DateTime
  stripeCustomerId String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

model Document {
  id            String    @id @default(cuid())
  title         String
  description   String?
  content       String    @db.Text
  uploadedBy    String    // User ID
  user          User      @relation(fields: [uploadedBy], references: [id])
  isPublic      Boolean   @default(false)
  questions     Question[]
  vectorId      String?   // Reference to vector store
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

model Question {
  id            String    @id @default(cuid())
  content       String
  answer        String    @db.Text
  userId        String
  user          User      @relation(fields: [userId], references: [id])
  documentId    String
  document      Document  @relation(fields: [documentId], references: [id])
  createdAt     DateTime  @default(now())
}

enum Role {
  ADMIN
  USER
}

enum Plan {
  FREE
  BASIC
  PREMIUM
  ENTERPRISE
}

enum Status {
  ACTIVE
  CANCELLED
  SUSPENDED
}